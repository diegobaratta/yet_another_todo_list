{"ast":null,"code":"var _jsxFileName = \"E:\\\\Coding\\\\Proyectos\\\\React\\\\yet_another_todo_list\\\\frontend\\\\src\\\\context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TasksContext = /*#__PURE__*/React.createContext({});\n\nfunction TasksContextProvider(props) {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [modal, setModal] = useState({\n    opened: false,\n    taskid: 0,\n    type: 'none'\n  });\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const response = await fetch(\"/api/tasks\");\n      const json = await response.json();\n\n      if (response.ok) {\n        setTasks(json);\n      }\n    };\n\n    fetchTasks();\n  }, []);\n\n  async function addTask(formData) {\n    const response = await fetch(\"/api/tasks\", {\n      method: \"POST\",\n      body: JSON.stringify(formData),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const json = await response.json();\n\n    if (!response.ok) {\n      setError(json.error);\n    } else {\n      setError(null);\n      console.log(\"New task added\", json);\n    } // setTasks(prevTasks => ([\n    //     ...prevTasks,\n    //     {\n    //         id: nanoid(), \n    //         checked: false,\n    //         title: formData.title, \n    //         desc: formData.desc,\n    //         date: new Date().getTime()\n    //     }\n    // ]))\n\n  }\n\n  function checkTask(id) {\n    setTasks(prevTasks => prevTasks.map(task => task._id === id ? { ...task,\n      checked: !task.checked\n    } : task));\n  }\n\n  function editTask(_ref) {\n    let {\n      id,\n      title,\n      desc\n    } = _ref;\n    setTasks(prevTasks => prevTasks.map(task => task._id === id ? { ...task,\n      title: title,\n      desc: desc\n    } : task));\n    setModal({\n      opened: false,\n      taskid: 0,\n      type: 'none'\n    });\n  }\n\n  function removeTask(id) {\n    setTasks(prevTasks => prevTasks.filter(task => task._id !== id));\n    setModal({\n      opened: false,\n      taskid: 0,\n      type: 'none'\n    });\n  }\n\n  function removeAllTasks() {\n    setTasks([]);\n    setModal({\n      opened: false,\n      taskid: 0,\n      type: 'none'\n    });\n  }\n\n  function sortTasks(type) {\n    switch (type) {\n      case \"alphAsc\":\n        setTasks(tasks.sort((a, b) => a.title < b.title ? -1 : a.title > b.title ? 1 : 0));\n        break;\n\n      case \"alphDesc\":\n        setTasks(tasks.sort((a, b) => a.title > b.title ? -1 : a.title < b.title ? 1 : 0));\n        break;\n\n      case \"dateAsc\":\n        setTasks(tasks.sort((a, b) => a.date < b.date ? -1 : a.date > b.date ? 1 : 0));\n        break;\n\n      case \"dateDesc\":\n        setTasks(tasks.sort((a, b) => a.date > b.date ? -1 : a.date < b.date ? 1 : 0));\n        break;\n\n      default:\n        break;\n    }\n\n    setModal({\n      opened: false,\n      taskid: 0,\n      type: 'none'\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(TasksContext.Provider, {\n    value: {\n      tasks,\n      addTask,\n      removeTask,\n      removeAllTasks,\n      checkTask,\n      editTask,\n      sortTasks,\n      modal,\n      setModal\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TasksContextProvider, \"qNC4NTzAv/s+66wxx8Rx6htf6eg=\");\n\n_c = TasksContextProvider;\nexport { TasksContext, TasksContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksContextProvider\");","map":{"version":3,"names":["React","useState","useEffect","nanoid","TasksContext","createContext","TasksContextProvider","props","tasks","setTasks","modal","setModal","opened","taskid","type","error","setError","fetchTasks","response","fetch","json","ok","addTask","formData","method","body","JSON","stringify","headers","console","log","checkTask","id","prevTasks","map","task","_id","checked","editTask","title","desc","removeTask","filter","removeAllTasks","sortTasks","sort","a","b","date","children"],"sources":["E:/Coding/Proyectos/React/yet_another_todo_list/frontend/src/context.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\"\r\nimport {nanoid} from \"nanoid\"\r\n\r\nconst TasksContext = React.createContext({})\r\n\r\nfunction TasksContextProvider (props) {\r\n    const [tasks, setTasks] = useState([])  \r\n    const [modal, setModal] = useState({opened: false, taskid: 0, type: 'none'})    \r\n    const [error, setError] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const fetchTasks = async () => {\r\n            const response = await fetch(\"/api/tasks\")\r\n            const json = await response.json()\r\n            \r\n            if (response.ok){\r\n                setTasks(json)\r\n            }\r\n        }\r\n\r\n        fetchTasks()\r\n    }, [])\r\n\r\n    async function addTask(formData) {\r\n\r\n        const response = await fetch(\"/api/tasks\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify(formData),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n\r\n        const json = await response.json()\r\n\r\n        if(!response.ok){\r\n            setError(json.error)\r\n        }else{\r\n            setError(null)\r\n            console.log(\"New task added\", json)\r\n        }        \r\n        \r\n        // setTasks(prevTasks => ([\r\n        //     ...prevTasks,\r\n        //     {\r\n        //         id: nanoid(), \r\n        //         checked: false,\r\n        //         title: formData.title, \r\n        //         desc: formData.desc,\r\n        //         date: new Date().getTime()\r\n        //     }\r\n        // ]))\r\n    }\r\n    \r\n    function checkTask(id){\r\n        setTasks(prevTasks => (prevTasks.map(task => (\r\n            task._id === id ?\r\n            {\r\n                ...task,\r\n                checked: !task.checked\r\n            } :\r\n            task\r\n            ))))\r\n    }\r\n\r\n    function editTask({id, title, desc}){\r\n        \r\n        setTasks(prevTasks =>   (prevTasks.map(task => (\r\n                                    task._id === id ?\r\n                                    {\r\n                                        ...task,\r\n                                        title: title, \r\n                                        desc: desc\r\n                                    } :\r\n                                    task\r\n                                    ))\r\n                                )\r\n                )\r\n        setModal({opened: false, taskid: 0, type: 'none'})\r\n    }\r\n    \r\n    function removeTask(id){\r\n        setTasks(prevTasks => prevTasks.filter(task => task._id !== id))\r\n        setModal({opened: false, taskid: 0, type: 'none'})\r\n    } \r\n    \r\n    function removeAllTasks(){\r\n        setTasks([])\r\n        setModal({opened: false, taskid: 0, type: 'none'})\r\n    }\r\n\r\n    function sortTasks(type) {        \r\n\r\n        switch(type){\r\n            case \"alphAsc\":\r\n                setTasks(tasks.sort((a, b) => (a.title < b.title ? -1 : a.title > b.title ? 1 : 0)))   \r\n                break;                \r\n            case \"alphDesc\":\r\n                setTasks(tasks.sort((a, b) => (a.title > b.title ? -1 : a.title < b.title ? 1 : 0)))   \r\n                break;\r\n            case \"dateAsc\":\r\n                setTasks(tasks.sort((a, b) => (a.date < b.date ? -1 : a.date > b.date ? 1 : 0)))   \r\n                break;\r\n            case \"dateDesc\":\r\n                setTasks(tasks.sort((a, b) => (a.date > b.date ? -1 : a.date < b.date ? 1 : 0)))   \r\n                break;\r\n            default:\r\n                break;\r\n        }       \r\n     \r\n        setModal({opened: false, taskid: 0, type: 'none'})\r\n    }\r\n\r\n    return (\r\n        <TasksContext.Provider value={{ tasks, \r\n                                        addTask, \r\n                                        removeTask, \r\n                                        removeAllTasks, \r\n                                        checkTask, \r\n                                        editTask,\r\n                                        sortTasks, \r\n                                        modal, \r\n                                        setModal\r\n                                    }}>\r\n            {props.children}\r\n        </TasksContext.Provider>\r\n    )\r\n}\r\n\r\nexport {TasksContext, TasksContextProvider} "],"mappings":"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"},"metadata":{},"sourceType":"module"}