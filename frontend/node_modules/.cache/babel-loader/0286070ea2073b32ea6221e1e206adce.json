{"ast":null,"code":"var _jsxFileName = \"E:\\\\Coding\\\\Proyectos\\\\React\\\\yet_another_todo_list\\\\src\\\\components\\\\Modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport ReactDOM from \"react-dom\";\nimport { TasksContext } from '../context';\nimport \"./Modal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Modal = _ref => {\n  _s();\n\n  let {\n    type\n  } = _ref;\n  const {\n    deleteModal,\n    setDeleteModal,\n    editModal,\n    setEditModal\n  } = useContext(TasksContext);\n\n  switch (type) {\n    case 'DELETE':\n      if (!deleteModal.opened) return null;\n\n      function handleClick(e) {\n        e.target.name === \"noBtn\" ? setOpenModal(false) : removeTask();\n      }\n\n      return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\xBFRealmente desea borrar la tarea?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"modalBtn\",\n              name: \"yesBtn\",\n              onClick: handleClick,\n              children: \"Si\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"modalBtn\",\n              name: \"noBtn\",\n              onClick: handleClick,\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true), document.getElementById(\"portal\"));\n      break;\n\n    case 'EDIT':\n      break;\n  }\n};\n\n_s(Modal, \"npo7vHm//GaxK5Wmj35nvoQZAP4=\");\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useContext","ReactDOM","TasksContext","Modal","type","deleteModal","setDeleteModal","editModal","setEditModal","opened","handleClick","e","target","name","setOpenModal","removeTask","createPortal","document","getElementById"],"sources":["E:/Coding/Proyectos/React/yet_another_todo_list/src/components/Modal.js"],"sourcesContent":["import React, {useContext} from 'react'\r\nimport ReactDOM from \"react-dom\"\r\n\r\nimport { TasksContext } from '../context'\r\n\r\nimport \"./Modal.css\"\r\n\r\nconst Modal = ({type}) => {   \r\n\r\n    const {deleteModal, setDeleteModal, editModal, setEditModal} = useContext(TasksContext)   \r\n    \r\n    switch(type){\r\n        case 'DELETE':\r\n            if(!deleteModal.opened) return null\r\n\r\n            function handleClick (e) {\r\n                e.target.name === \"noBtn\" \r\n                    ? setOpenModal(false)\r\n                    : removeTask()\r\n            }\r\n\r\n            return ReactDOM.createPortal(      \r\n                <>\r\n                    <div className='overlay' />\r\n                    <div className='modal'>            \r\n                        <p>Â¿Realmente desea borrar la tarea?</p>           \r\n                        <div>\r\n                            <button className='modalBtn' name=\"yesBtn\" onClick={handleClick}>Si</button>\r\n                            <button className='modalBtn' name=\"noBtn\"  onClick={handleClick}>No</button>\r\n                        </div> \r\n                    </div>\r\n                </> ,\r\n                document.getElementById(\"portal\")\r\n            )\r\n            break\r\n        case 'EDIT':\r\n            break\r\n    }    \r\n}\r\n\r\nexport default Modal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,SAASC,YAAT,QAA6B,YAA7B;AAEA,OAAO,aAAP;;;;AAEA,MAAMC,KAAK,GAAG,QAAY;EAAA;;EAAA,IAAX;IAACC;EAAD,CAAW;EAEtB,MAAM;IAACC,WAAD;IAAcC,cAAd;IAA8BC,SAA9B;IAAyCC;EAAzC,IAAyDR,UAAU,CAACE,YAAD,CAAzE;;EAEA,QAAOE,IAAP;IACI,KAAK,QAAL;MACI,IAAG,CAACC,WAAW,CAACI,MAAhB,EAAwB,OAAO,IAAP;;MAExB,SAASC,WAAT,CAAsBC,CAAtB,EAAyB;QACrBA,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,OAAlB,GACMC,YAAY,CAAC,KAAD,CADlB,GAEMC,UAAU,EAFhB;MAGH;;MAED,oBAAOd,QAAQ,CAACe,YAAT,eACH;QAAA,wBACI;UAAK,SAAS,EAAC;QAAf;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAK,SAAS,EAAC,OAAf;UAAA,wBACI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI;YAAA,wBACI;cAAQ,SAAS,EAAC,UAAlB;cAA6B,IAAI,EAAC,QAAlC;cAA2C,OAAO,EAAEN,WAApD;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ,eAEI;cAAQ,SAAS,EAAC,UAAlB;cAA6B,IAAI,EAAC,OAAlC;cAA2C,OAAO,EAAEA,WAApD;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAFJ;UAAA;YAAA;YAAA;YAAA;UAAA,QAFJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA,gBADG,EAWHO,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAXG,CAAP;MAaA;;IACJ,KAAK,MAAL;MACI;EAzBR;AA2BH,CA/BD;;GAAMf,K;;KAAAA,K;AAiCN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}