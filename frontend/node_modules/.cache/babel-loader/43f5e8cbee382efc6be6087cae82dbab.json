{"ast":null,"code":"var _jsxFileName = \"E:\\\\Coding\\\\Proyectos\\\\React\\\\yet_another_todo_list\\\\src\\\\components\\\\Modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport ReactDOM from \"react-dom\";\nimport { TasksContext } from '../context';\nimport \"./Modal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Modal = _ref => {\n  _s();\n\n  let {\n    type\n  } = _ref;\n  const {\n    deleteModal,\n    setDeleteModal,\n    editModal,\n    setEditModal,\n    removeTask\n  } = useContext(TasksContext);\n  let body;\n\n  function handleClick(e) {\n    e.target.name === \"noBtn\" ? setDeleteModal(prevState => ({ ...prevState,\n      opened: false\n    })) : removeTask(deleteModal.taskid);\n  }\n\n  switch (type) {\n    case 'DELETE':\n      if (!deleteModal.opened) return null;\n      body = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\xBFRealmente desea borrar la tarea?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"modalBtn\",\n              name: \"yesBtn\",\n              onClick: handleClick,\n              children: \"Si\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"modalBtn\",\n              name: \"noBtn\",\n              onClick: handleClick,\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true);\n      break;\n\n    case 'EDIT':\n      if (!editModal.opened) return null;\n      body = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: \"Titulo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"desc\",\n              children: \"Descripcion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"dec\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"modalBtn\",\n              name: \"yesBtn\",\n              onClick: handleClick,\n              children: \"Editar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true);\n      break;\n  }\n\n  return /*#__PURE__*/ReactDOM.createPortal(body, document.getElementById(\"portal\"));\n};\n\n_s(Modal, \"cAoN7CKQDSZCI94ZwpfHQZAZWS8=\");\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useContext","ReactDOM","TasksContext","Modal","type","deleteModal","setDeleteModal","editModal","setEditModal","removeTask","body","handleClick","e","target","name","prevState","opened","taskid","createPortal","document","getElementById"],"sources":["E:/Coding/Proyectos/React/yet_another_todo_list/src/components/Modal.js"],"sourcesContent":["import React, {useContext} from 'react'\r\nimport ReactDOM from \"react-dom\"\r\n\r\nimport { TasksContext } from '../context'\r\n\r\nimport \"./Modal.css\"\r\n\r\nconst Modal = ({type}) => {   \r\n\r\n    const {deleteModal, setDeleteModal, editModal, setEditModal, removeTask} = useContext(TasksContext)   \r\n    let body;\r\n\r\n    function handleClick (e) {\r\n        e.target.name === \"noBtn\" \r\n            ? setDeleteModal(prevState => ({...prevState, opened: false}))\r\n            : removeTask(deleteModal.taskid)\r\n    }\r\n\r\n    switch(type){\r\n        case 'DELETE':\r\n\r\n            if(!deleteModal.opened) return null\r\n\r\n            body =  <>\r\n                        <div className='overlay' />\r\n                        <div className='modal'>            \r\n                            <p>Â¿Realmente desea borrar la tarea?</p>           \r\n                            <div>\r\n                                <button className='modalBtn' name=\"yesBtn\" onClick={handleClick}>Si</button>\r\n                                <button className='modalBtn' name=\"noBtn\"  onClick={handleClick}>No</button>\r\n                            </div> \r\n                        </div>\r\n                    </>            \r\n            break\r\n        case 'EDIT':\r\n            if(!editModal.opened) return null\r\n\r\n            body =  <>\r\n                        <div className='overlay' />\r\n                        <div className='modal'>            \r\n                            <form>\r\n                                <label htmlFor='title'>Titulo</label>\r\n                                <input id='title' />\r\n                                <label htmlFor='desc'>Descripcion</label>\r\n                                <input id='dec' />\r\n                            </form>\r\n                            <div>\r\n                                <button className='modalBtn' name=\"yesBtn\" onClick={handleClick}>Editar</button>\r\n                            </div> \r\n                        </div>\r\n                    </>\r\n            break\r\n    }   \r\n    \r\n    return ReactDOM.createPortal(      \r\n       body,\r\n       document.getElementById(\"portal\")\r\n   )\r\n}\r\n\r\nexport default Modal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,SAASC,YAAT,QAA6B,YAA7B;AAEA,OAAO,aAAP;;;;AAEA,MAAMC,KAAK,GAAG,QAAY;EAAA;;EAAA,IAAX;IAACC;EAAD,CAAW;EAEtB,MAAM;IAACC,WAAD;IAAcC,cAAd;IAA8BC,SAA9B;IAAyCC,YAAzC;IAAuDC;EAAvD,IAAqET,UAAU,CAACE,YAAD,CAArF;EACA,IAAIQ,IAAJ;;EAEA,SAASC,WAAT,CAAsBC,CAAtB,EAAyB;IACrBA,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,OAAlB,GACMR,cAAc,CAACS,SAAS,KAAK,EAAC,GAAGA,SAAJ;MAAeC,MAAM,EAAE;IAAvB,CAAL,CAAV,CADpB,GAEMP,UAAU,CAACJ,WAAW,CAACY,MAAb,CAFhB;EAGH;;EAED,QAAOb,IAAP;IACI,KAAK,QAAL;MAEI,IAAG,CAACC,WAAW,CAACW,MAAhB,EAAwB,OAAO,IAAP;MAExBN,IAAI,gBAAI;QAAA,wBACI;UAAK,SAAS,EAAC;QAAf;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAK,SAAS,EAAC,OAAf;UAAA,wBACI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI;YAAA,wBACI;cAAQ,SAAS,EAAC,UAAlB;cAA6B,IAAI,EAAC,QAAlC;cAA2C,OAAO,EAAEC,WAApD;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ,eAEI;cAAQ,SAAS,EAAC,UAAlB;cAA6B,IAAI,EAAC,OAAlC;cAA2C,OAAO,EAAEA,WAApD;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAFJ;UAAA;YAAA;YAAA;YAAA;UAAA,QAFJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA,gBAAR;MAUA;;IACJ,KAAK,MAAL;MACI,IAAG,CAACJ,SAAS,CAACS,MAAd,EAAsB,OAAO,IAAP;MAEtBN,IAAI,gBAAI;QAAA,wBACI;UAAK,SAAS,EAAC;QAAf;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAK,SAAS,EAAC,OAAf;UAAA,wBACI;YAAA,wBACI;cAAO,OAAO,EAAC,OAAf;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ,eAEI;cAAO,EAAE,EAAC;YAAV;cAAA;cAAA;cAAA;YAAA,QAFJ,eAGI;cAAO,OAAO,EAAC,MAAf;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAHJ,eAII;cAAO,EAAE,EAAC;YAAV;cAAA;cAAA;cAAA;YAAA,QAJJ;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAOI;YAAA,uBACI;cAAQ,SAAS,EAAC,UAAlB;cAA6B,IAAI,EAAC,QAAlC;cAA2C,OAAO,EAAEC,WAApD;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QAPJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA,gBAAR;MAcA;EAjCR;;EAoCA,oBAAOV,QAAQ,CAACiB,YAAT,CACJR,IADI,EAEJS,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAFI,CAAP;AAIH,CAnDD;;GAAMjB,K;;KAAAA,K;AAqDN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}