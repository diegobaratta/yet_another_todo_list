{"ast":null,"code":"var _jsxFileName = \"E:\\\\Coding\\\\Proyectos\\\\React\\\\yet_another_todo_list\\\\src\\\\components\\\\Modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport ReactDOM from \"react-dom\";\nimport { TasksContext } from '../context';\nimport \"./Modal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Modal = () => {\n  _s();\n\n  const {\n    tasks,\n    modal,\n    setModal,\n    removeTask,\n    removeAllTasks,\n    editTask,\n    sortTasks\n  } = useContext(TasksContext);\n  const task = modal.taskid ? tasks.find(task => task.id === modal.taskid) : {\n    id: 0,\n    title: '',\n    desc: ''\n  };\n  const [editForm, setEditForm] = useState({\n    id: task.id,\n    title: task.title,\n    desc: task.desc\n  });\n  let modalBody;\n  if (!modal.opened) return null;\n\n  function handleClick(e) {\n    switch (e.target.name) {\n      case \"yesDel\":\n        removeTask(modal.taskid);\n        break;\n\n      case \"noDel\":\n        setModal({\n          opened: false,\n          taskid: 0,\n          type: 'none'\n        });\n        break;\n\n      case \"yesDelAll\":\n        removeAllTasks();\n        break;\n\n      case \"edit\":\n        editTask(editForm);\n        break;\n\n      case \"sort\":\n        editTask(editForm);\n        break;\n\n      default:\n        setModal({\n          opened: false,\n          taskid: 0,\n          type: 'none'\n        });\n        break;\n    }\n  }\n\n  switch (modal.type) {\n    case 'DELETE':\n      modalBody = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\xBFRealmente desea borrar la tarea?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalBtn\",\n            name: \"yesDel\",\n            onClick: handleClick,\n            children: \"Si\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalBtn\",\n            name: \"noDel\",\n            onClick: handleClick,\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true);\n      break;\n\n    case 'DELETEALL':\n      modalBody = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\xBFRealmente desea borrar todas las tareas?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalBtn\",\n            name: \"yesDelAll\",\n            onClick: handleClick,\n            children: \"Si\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalBtn\",\n            name: \"noDel\",\n            onClick: handleClick,\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true);\n      break;\n\n    case 'EDIT':\n      function handleChange(e) {\n        const {\n          name,\n          value\n        } = e.target;\n        setEditForm(prevState => ({ ...prevState,\n          [name]: value\n        }));\n      }\n\n      modalBody = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Edici\\xF3n de tarea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"title\",\n            name: \"title\",\n            value: editForm.title,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"desc\",\n            name: \"desc\",\n            value: editForm.desc,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modalBtn\",\n            name: \"edit\",\n            onClick: handleClick,\n            children: \"Editar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true);\n      break;\n\n    case 'SORT':\n      function handleSort(e) {\n        console.log(e.target.value);\n        sortTasks(e.target.value);\n      }\n\n      modalBody = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: handleSort,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Seleccionar orden\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"alphAsc\",\n              children: \"A - Z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"alphDesc\",\n              children: \"Z - A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"dateAsc\",\n              children: \"Vieja - Nueva\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"dateDesc\",\n              children: \"Nueva - Vieja\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this)\n      }, void 0, false);\n      break;\n\n    default:\n      break;\n  }\n\n  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      name: \"overlay\",\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: modalBody\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true), document.getElementById(\"portal\"));\n};\n\n_s(Modal, \"s2aCoqqLdtY9tivUp60xsjR1sR4=\");\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useContext","useState","ReactDOM","TasksContext","Modal","tasks","modal","setModal","removeTask","removeAllTasks","editTask","sortTasks","task","taskid","find","id","title","desc","editForm","setEditForm","modalBody","opened","handleClick","e","target","name","type","handleChange","value","prevState","handleSort","console","log","createPortal","document","getElementById"],"sources":["E:/Coding/Proyectos/React/yet_another_todo_list/src/components/Modal.js"],"sourcesContent":["import React, {useContext, useState} from 'react'\r\nimport ReactDOM from \"react-dom\"\r\n\r\nimport { TasksContext } from '../context'\r\n\r\nimport \"./Modal.css\"\r\n\r\nconst Modal = () => {   \r\n\r\n    const {tasks, modal, setModal, removeTask, removeAllTasks, editTask, sortTasks} = useContext(TasksContext)  \r\n    const task = modal.taskid ? tasks.find(task => task.id === modal.taskid) : {id: 0, title: '', desc: ''}   \r\n    const [editForm, setEditForm] = useState({id: task.id, title: task.title, desc: task.desc}) \r\n\r\n    let modalBody;\r\n    \r\n    if(!modal.opened) return null\r\n\r\n    function handleClick (e) {\r\n        switch(e.target.name){\r\n            case \"yesDel\":\r\n                removeTask(modal.taskid)\r\n                break;\r\n            case \"noDel\":\r\n                setModal({opened: false, taskid: 0, type: 'none'})\r\n                break;\r\n            case \"yesDelAll\":\r\n                removeAllTasks()\r\n                break;\r\n            case \"edit\":  \r\n                editTask(editForm)\r\n                break;\r\n            case \"sort\":  \r\n                editTask(editForm)\r\n                break;\r\n            default:\r\n                setModal({opened: false, taskid: 0, type: 'none'})\r\n                break;\r\n        }\r\n    }\r\n\r\n    switch(modal.type){\r\n        case 'DELETE':\r\n            modalBody = <>           \r\n                            <p>¿Realmente desea borrar la tarea?</p>           \r\n                            <div>\r\n                                <button className='modalBtn' name=\"yesDel\" onClick={handleClick}>Si</button>\r\n                                <button className='modalBtn' name=\"noDel\"  onClick={handleClick}>No</button>\r\n                            </div>                         \r\n                        </>            \r\n            break\r\n        case 'DELETEALL':\r\n            modalBody = <>           \r\n                            <p>¿Realmente desea borrar todas las tareas?</p>\r\n                            <div>\r\n                                <button className='modalBtn' name=\"yesDelAll\" onClick={handleClick}>Si</button>\r\n                                <button className='modalBtn' name=\"noDel\"  onClick={handleClick}>No</button>\r\n                            </div>                         \r\n                        </>            \r\n            break\r\n        case 'EDIT':                                            \r\n            \r\n            function handleChange(e) {\r\n                const {name, value} = e.target\r\n                \r\n                setEditForm(prevState => (\r\n                    {\r\n                        ...prevState,\r\n                        [name]: value\r\n                    }\r\n                ))\r\n            } \r\n            \r\n            modalBody = <>                                 \r\n                            <form>  \r\n                                <p>Edici&oacute;n de tarea</p>    \r\n                                <input                                         \r\n                                    id='title' \r\n                                    name='title' \r\n                                    value={editForm.title} \r\n                                    onChange={handleChange} />\r\n                                <textarea                                         \r\n                                    id='desc' \r\n                                    name='desc' \r\n                                    value={editForm.desc} \r\n                                    onChange={handleChange} />\r\n                            </form>\r\n                            <div>\r\n                                <button className='modalBtn' name=\"edit\" onClick={handleClick}>Editar</button>\r\n                            </div>                         \r\n                        </>\r\n            break\r\n        case 'SORT':                                            \r\n            \r\n            function handleSort(e) {\r\n                console.log(e.target.value)\r\n                sortTasks(e.target.value)\r\n            } \r\n            \r\n            modalBody = <>  \r\n                            <div>\r\n                                <select onChange={handleSort}>\r\n                                    <option value=''>Seleccionar orden</option>\r\n                                    <option value='alphAsc'>A - Z</option>\r\n                                    <option value='alphDesc'>Z - A</option>\r\n                                    <option value='dateAsc'>Vieja - Nueva</option>\r\n                                    <option value='dateDesc'>Nueva - Vieja</option>\r\n                                </select>\r\n                            </div>                         \r\n                        </>\r\n            break\r\n        default:\r\n            break\r\n    }   \r\n    \r\n    return ReactDOM.createPortal(      \r\n        <>\r\n            <div className='overlay' name=\"overlay\" onClick={handleClick} />\r\n            <div className='modal'>            \r\n                {modalBody}\r\n            </div>\r\n        </>,\r\n       document.getElementById(\"portal\")\r\n   )\r\n}\r\n\r\nexport default Modal"],"mappings":"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"},"metadata":{},"sourceType":"module"}