{"ast":null,"code":"var _jsxFileName = \"E:\\\\Coding\\\\Proyectos\\\\React\\\\yet_another_todo_list\\\\src\\\\context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TasksContext = /*#__PURE__*/React.createContext({});\n\nfunction TasksContextProvider(props) {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [modal, setModal] = useState({\n    opened: false,\n    taskid: 0,\n    type: 'none'\n  });\n\n  function addTask(formData) {\n    setTasks(prevTasks => [...prevTasks, {\n      id: nanoid(),\n      checked: false,\n      title: formData.title,\n      desc: formData.desc,\n      date: new Date().getTime()\n    }]);\n  }\n\n  function checkTask(id) {\n    setTasks(prevTasks => prevTasks.map(task => task.id === id ? { ...task,\n      checked: !task.checked\n    } : task));\n  }\n\n  function editTask(_ref) {\n    let {\n      id,\n      title,\n      desc\n    } = _ref;\n    setTasks(prevTasks => prevTasks.map(task => task.id === id ? { ...task,\n      title: title,\n      desc: desc\n    } : task));\n    setModal({\n      opened: false,\n      taskid: 0,\n      type: 'none'\n    });\n  }\n\n  function removeTask(id) {\n    setTasks(prevTasks => prevTasks.filter(task => task.id !== id));\n    setModal({\n      opened: false,\n      taskid: 0,\n      type: 'none'\n    });\n  }\n\n  function removeAllTasks() {\n    setTasks([]);\n    setModal({\n      opened: false,\n      taskid: 0,\n      type: 'none'\n    });\n  }\n\n  function sortTasks(type) {\n    let compareFunc;\n\n    switch (type) {\n      case \"alphAsc\":\n        compareFunc = (s1, s2) => s1.localeCompare(s2) > 0 ? 1 : s1.localeCompare(s2) < 0 ? -1 : 0;\n\n        break;\n\n      case \"alphDesc\":\n        compareFunc = (s1, s2) => s1.localeCompare(s2) < 0 ? 1 : s1.localeCompare(s2) > 0 ? -1 : 0;\n\n        break;\n\n      case \"dateAsc\":\n        compareFunc = (a, b) => a > b ? 1 : a < b ? -1 : 0;\n\n        break;\n\n      case \"dateDesc\":\n        compareFunc = (a, b) => a < b ? 1 : a > b ? -1 : 0;\n\n        break;\n\n      default:\n        break;\n    }\n\n    console.loc(compareFunc);\n    setTasks(mergeSort(tasks, compareFunc, type));\n    setModal({\n      opened: false,\n      taskid: 0,\n      type: 'none'\n    });\n  }\n\n  let defaultCompare = (a, b) => a > b ? 1 : a < b ? -1 : 0;\n\n  function mergeSort(array) {\n    let compare = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultCompare;\n    let type = arguments.length > 2 ? arguments[2] : undefined;\n    let start = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    let end = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : array.length;\n    let length = end - start;\n    if (length <= 1) return array.slice(start, end); //Divide\n\n    let pivot = Math.floor(length / 2); //Conquer\n\n    let left = mergeSort(array, compare, type, start, start + pivot);\n    let right = mergeSort(array, compare, type, start + pivot, end); //Combine\n\n    let i = 0,\n        j = 0;\n    let sorted = [];\n\n    for (let k = 0; k < length; k++) {\n      let comp1, comp2;\n      console.log(left);\n\n      if (type === \"alphAsc\" || type === \"alphDesc\") {\n        comp1 = left[i].title;\n        comp2 = right[j].title;\n      } else {\n        comp1 = left[i].date;\n        comp2 = right[j].date;\n      }\n\n      if (i < left.length && compare(comp1, comp2) <= 0) {\n        sorted.push(left[i]);\n        i++;\n      } else {\n        sorted.push(right[j]);\n        j++;\n      }\n    }\n\n    return sorted;\n  }\n\n  return /*#__PURE__*/_jsxDEV(TasksContext.Provider, {\n    value: {\n      tasks,\n      addTask,\n      removeTask,\n      removeAllTasks,\n      checkTask,\n      editTask,\n      sortTasks,\n      modal,\n      setModal\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TasksContextProvider, \"FkUqcRHduHYk9drGt3Xloj95/GM=\");\n\n_c = TasksContextProvider;\nexport { TasksContext, TasksContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksContextProvider\");","map":{"version":3,"names":["React","useState","nanoid","TasksContext","createContext","TasksContextProvider","props","tasks","setTasks","modal","setModal","opened","taskid","type","addTask","formData","prevTasks","id","checked","title","desc","date","Date","getTime","checkTask","map","task","editTask","removeTask","filter","removeAllTasks","sortTasks","compareFunc","s1","s2","localeCompare","a","b","console","loc","mergeSort","defaultCompare","array","compare","start","end","length","slice","pivot","Math","floor","left","right","i","j","sorted","k","comp1","comp2","log","push","children"],"sources":["E:/Coding/Proyectos/React/yet_another_todo_list/src/context.js"],"sourcesContent":["import React, {useState} from \"react\"\r\nimport {nanoid} from \"nanoid\"\r\n\r\nconst TasksContext = React.createContext({})\r\n\r\nfunction TasksContextProvider (props) {\r\n    const [tasks, setTasks] = useState([])  \r\n    const [modal, setModal] = useState({opened: false, taskid: 0, type: 'none'})    \r\n\r\n    function addTask(formData) {\r\n        \r\n        setTasks(prevTasks => ([\r\n            ...prevTasks,\r\n            {\r\n                id: nanoid(), \r\n                checked: false,\r\n                title: formData.title, \r\n                desc: formData.desc,\r\n                date: new Date().getTime()\r\n            }\r\n        ]))\r\n    }\r\n    \r\n    function checkTask(id){\r\n        setTasks(prevTasks => (prevTasks.map(task => (\r\n            task.id === id ?\r\n            {\r\n                ...task,\r\n                checked: !task.checked\r\n            } :\r\n            task\r\n            ))))\r\n    }\r\n\r\n    function editTask({id, title, desc}){\r\n        \r\n        setTasks(prevTasks =>   (prevTasks.map(task => (\r\n                                    task.id === id ?\r\n                                    {\r\n                                        ...task,\r\n                                        title: title, \r\n                                        desc: desc\r\n                                    } :\r\n                                    task\r\n                                    ))\r\n                                )\r\n                )\r\n        setModal({opened: false, taskid: 0, type: 'none'})\r\n    }\r\n    \r\n    function removeTask(id){\r\n        setTasks(prevTasks => prevTasks.filter(task => task.id !== id))\r\n        setModal({opened: false, taskid: 0, type: 'none'})\r\n    } \r\n    \r\n    function removeAllTasks(){\r\n        setTasks([])\r\n        setModal({opened: false, taskid: 0, type: 'none'})\r\n    }\r\n\r\n    function sortTasks(type) {        \r\n        \r\n        let compareFunc\r\n\r\n        switch(type){\r\n            case \"alphAsc\":   \r\n                compareFunc = (s1, s2) => (s1.localeCompare(s2) > 0 ? 1 : s1.localeCompare(s2) < 0 ? -1 : 0)                         \r\n                break;\r\n            case \"alphDesc\":\r\n                compareFunc = (s1, s2) => (s1.localeCompare(s2) < 0 ? 1 : s1.localeCompare(s2) > 0 ? -1 : 0)                         \r\n                break;\r\n            case \"dateAsc\":\r\n                compareFunc = (a, b) => (a > b ? 1 : a < b ? -1 : 0)         \r\n                break;\r\n            case \"dateDesc\":\r\n                compareFunc = (a, b) => (a < b ? 1 : a > b ? -1 : 0)         \r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        console.loc(compareFunc)\r\n        setTasks(mergeSort(tasks, compareFunc, type))\r\n        setModal({opened: false, taskid: 0, type: 'none'})\r\n    }\r\n\r\n    let defaultCompare = (a, b) => (a > b ? 1 : a < b ? -1 : 0)\r\n\r\n    function mergeSort(array, compare = defaultCompare, type, start = 0, end = array.length){\r\n        \r\n        let length = end - start\r\n        \r\n        if(length <= 1) return array.slice(start, end)\r\n\r\n        //Divide\r\n        let pivot = Math.floor(length / 2)\r\n\r\n        //Conquer\r\n        let left = mergeSort(array, compare, type, start, start + pivot)\r\n        let right = mergeSort(array, compare, type, start + pivot, end)\r\n\r\n        \r\n        //Combine\r\n        let i = 0, j = 0\r\n        let sorted = []\r\n        \r\n        for (let k = 0; k < length; k++){\r\n            \r\n            let comp1, comp2\r\n            \r\n            console.log(left)\r\n            if(type === \"alphAsc\" || type === \"alphDesc\"){\r\n                comp1 = left[i].title\r\n                comp2 = right[j].title\r\n            }else{\r\n                comp1 = left[i].date\r\n                comp2 = right[j].date\r\n            }\r\n\r\n            if(i < left.length && compare(comp1, comp2) <= 0){\r\n                sorted.push(left[i])\r\n                i++\r\n            } else {\r\n                sorted.push(right[j])\r\n                j++\r\n            }\r\n        }\r\n\r\n        return sorted        \r\n    }\r\n\r\n    return (\r\n        <TasksContext.Provider value={{ tasks, \r\n                                        addTask, \r\n                                        removeTask, \r\n                                        removeAllTasks, \r\n                                        checkTask, \r\n                                        editTask,\r\n                                        sortTasks, \r\n                                        modal, \r\n                                        setModal\r\n                                    }}>\r\n            {props.children}\r\n        </TasksContext.Provider>\r\n    )\r\n}\r\n\r\nexport {TasksContext, TasksContextProvider} "],"mappings":"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"},"metadata":{},"sourceType":"module"}